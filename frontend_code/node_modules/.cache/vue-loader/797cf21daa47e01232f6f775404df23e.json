{"remainingRequest":"/Users/yoyuu/Desktop/boss/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yoyuu/Desktop/boss/src/components/Gridmanage.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"/Users/yoyuu/Desktop/boss/src/components/Gridmanage.vue","mtime":1591174708798},{"path":"/Users/yoyuu/Desktop/boss/node_modules/css-loader/dist/cjs.js","mtime":1590210223183},{"path":"/Users/yoyuu/Desktop/boss/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1590210223334},{"path":"/Users/yoyuu/Desktop/boss/node_modules/postcss-loader/src/index.js","mtime":1590210223542},{"path":"/Users/yoyuu/Desktop/boss/node_modules/less-loader/dist/cjs.js","mtime":1590227822959},{"path":"/Users/yoyuu/Desktop/boss/node_modules/cache-loader/dist/cjs.js","mtime":1590210211186},{"path":"/Users/yoyuu/Desktop/boss/node_modules/vue-loader/lib/index.js","mtime":1590210223334}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5zZWFyY2hCdG4gewogIHBhZGRpbmc6IDIxcHggMHB4Owp9CgouZWwtbWVudS1pdGVtLWdyb3VwX190aXRsZSB7CiAgcGFkZGluZzogMCAhaW1wb3J0YW50Owp9CgovLyDlr7nor53moYbmoLflvI8KLmVsLWRpYWxvZyB7CiAgYm9yZGVyLXJhZGl1czogNnB4ICFpbXBvcnRhbnQ7Cn0KCi5lbC1kaWFsb2dfX2hlYWRlciB7CiAgbWFyZ2luLXRvcDogMzBweDsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjNDA5ZWZmOwogIGJvcmRlci1yYWRpdXM6IDZweCA2cHggMHB4IDBweDsKfQoKLmVsLWRpYWxvZ19fdGl0bGUgewogIGNvbG9yOiAjZmZmICFpbXBvcnRhbnQ7Cn0KCi5lbC1kaWFsb2dfX2JvZHkgewogIHBhZGRpbmc6IDE1cHggIWltcG9ydGFudDsKfQoKLk1hbmFnZXIgewogIGZvbnQtc2l6ZTogMjRweDsKICBtYXJnaW46IDEycHggMHB4OwogIGN1cnNvcjogZGVmYXVsdDsKfQoKLm1hbmFnZXJTZWxlY3QgewogIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7Cn0K"},{"version":3,"sources":["Gridmanage.vue"],"names":[],"mappingsfile":"Gridmanage.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div style=\"margin-top: 15px;width:100%\">\n    <!-- 搜索框及添加网格单元区域 -->\n    <el-card>\n      <el-row :gutter=\"5\">\n        <el-col :span=\"10\">\n          <!-- 搜索区域 -->\n          <el-input\n            placeholder=\"请输入网格单元名称\"\n            class=\"input-with-select\"\n            clearable\n            v-model=\"queryInfo.query\"\n          >\n            <el-button\n              slot=\"append\"\n              icon=\"el-icon-search\"\n              @click=\"getgridcellsbyword(queryInfo.query)\"\n            ></el-button>\n          </el-input>\n        </el-col>\n        <!-- 测试按钮 -->\n        <!-- <el-col :span=\"1\">\n          <el-button type=\"primary\" style=\"margin-left: 16px;\" @click=\"test\">功能测试</el-button>\n        </el-col>-->\n      </el-row>\n    </el-card>\n    <!-- 网格单元列表区域 -->\n    <el-table :data=\"gridCellsData\" border style=\"width: 100%;margin-top:15px;\">\n      <el-table-column prop=\"gridcellid\" label=\"网格单元ID\" width=\"100\" align=\"center\"></el-table-column>\n      <el-table-column prop=\"gridcellname\" label=\"网格单元名称\" span=\"2\" align=\"center\"></el-table-column>\n      <el-table-column prop=\"gridcellcode\" label=\"网格单元编码\" span=\"1\" align=\"center\"></el-table-column>\n      <el-table-column prop=\"customermanagername\" label=\"客户经理\" span=\"1\" align=\"center\"></el-table-column>\n      <el-table-column prop=\"installermanagername\" label=\"装维经理\" span=\"1\" align=\"center\"></el-table-column>\n      <el-table-column prop=\"operate\" label=\"操作\" span=\"1\" align=\"center\">\n        <!-- 操作区域 -->\n        <!-- 按钮文字提示 -->\n        <el-tooltip\n          class=\"item\"\n          effect=\"dark\"\n          content=\"编辑\"\n          placement=\"top\"\n          :enterable=\"false\"\n          transition=\"none\"\n          slot-scope=\"scope\"\n        >\n          <!-- 按钮 -->\n          <el-button\n            type=\"primary\"\n            icon=\"el-icon-edit\"\n            size=\"mini\"\n            @click=\"getgridcellsbyid(scope.row.gridcellid)\"\n          ></el-button>\n        </el-tooltip>\n      </el-table-column>\n    </el-table>\n    <!-- 底部导航菜单 -->\n    <div class=\"block\" style=\"margin-top:15px;display:flex;justify-content:flex-end\">\n      <el-pagination\n        @size-change=\"handleSizeChange\"\n        @current-change=\"handleCurrentChange\"\n        :current-page=\"currentPage\"\n        :page-sizes=\"[5,10,20,50,100]\"\n        :page-size=\"pageSize\"\n        layout=\"total, sizes, prev, pager, next, jumper\"\n        :total=\"total\"\n      ></el-pagination>\n    </div>\n\n    <!-- 编辑对话框 -->\n    <el-dialog\n      style=\"cursor:default\"\n      :title=\"GridCells.title\"\n      :visible.sync=\"editDialog\"\n      width=\"30%\"\n      :before-close=\"handleClose\"\n      :show-close=\"false\"\n      unselectable=\"on\"\n      onselectstart=\"return false;\"\n    >\n      <!-- 客户经理信息表单 -->\n      <div>\n        <div class=\"Manager\">客户经理信息</div>\n        <el-form :model=\"GridCells\" ref=\"GridCellsRef\" label-width=\"80px\" label-position=\"left\">\n          <el-form-item label=\"姓　　名\">\n            <!-- <el-input placeholder=\"请输入姓名\" v-model=\"GridCells.customermanagername\"></el-input> -->\n            <!-- <el-autocomplete\n              v-model=\"GridCells.customermanagername\"\n              :fetch-suggestions=\"querySearch\"\n              placeholder=\"请输入内容\"\n              :trigger-on-focus=\"false\"\n              @select=\"handleSelect\"\n            ></el-autocomplete>-->\n            <el-select\n              v-model=\"GridCells.customermanagername\"\n              filterable\n              placeholder=\"请选择\"\n              @change=\"matchingcminfo(GridCells.customermanagername)\"\n              class=\"managerSelect\"\n            >\n              <el-option\n                v-for=\"item in managerInfo\"\n                :key=\"item.id\"\n                :label=\"item.value\"\n                :value=\"item.id\"\n              ></el-option>\n            </el-select>\n          </el-form-item>\n          <el-form-item label=\"智改工号\">\n            <el-input placeholder=\"请输入内容\" v-model=\"cmInfo.zgjobnumber\" :disabled=\"true\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"沙盘工号\">\n            <el-input placeholder=\"请输入内容\" v-model=\"cmInfo.spjobnumber\" :disabled=\"true\"></el-input>\n          </el-form-item>\n        </el-form>\n      </div>\n      <!-- 装维经理表单 -->\n      <div style=\"border-top:1px solid black\">\n        <div class=\"Manager\">装维经理信息</div>\n        <el-form ref=\"form\" :model=\"GridCells\" label-width=\"80px\" label-position=\"left\">\n          <el-form-item label=\"姓　　名\">\n            <el-select\n              v-model=\"GridCells.installermanagername\"\n              filterable\n              placeholder=\"请选择\"\n              @change=\"matchingiminfo(GridCells.installermanagername)\"\n              class=\"managerSelect\"\n            >\n              <el-option\n                v-for=\"item in managerInfo\"\n                :key=\"item.id\"\n                :label=\"item.value\"\n                :value=\"item.id\"\n              ></el-option>\n            </el-select>\n          </el-form-item>\n          <el-form-item label=\"智改工号\">\n            <el-input placeholder=\"请输入内容\" v-model=\"imInfo.zgjobnumber\" :disabled=\"true\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"沙盘工号\">\n            <el-input placeholder=\"请输入内容\" v-model=\"imInfo.spjobnumber\" :disabled=\"true\"></el-input>\n          </el-form-item>\n        </el-form>\n        <span slot=\"footer\" class=\"dialog-footer\">\n          <el-button @click=\"handleClose\">取 消</el-button>\n          <el-button type=\"primary\" @click=\"savedata\">保 存</el-button>\n        </span>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      // 搜索内容\n      queryInfo: {\n        query: \"\",\n        code: \"\"\n      },\n      // 选择客户经理姓名后返回改客户经理的智改工号和沙盘工号\n      cmInfo: [],\n      // 选择客户经理姓名后返回改客户经理的智改工号和沙盘工号\n      imInfo: [],\n\n      // 所有经理信息\n      managerInfo: [],\n      usersname: [],\n      state: \"\",\n      // 控制编辑对话框显示与否\n      editDialog: false,\n      // 列表当前页码\n      currentPage: 1,\n      // 列表当前每页显示数据条数\n      pageSize: 10,\n      // 搜索框内容\n      search: \"\",\n      // 数据总条数\n      total: 1,\n      // 网格单元数据\n      gridCellsData: [],\n      // 编辑对话框表单\n      GridCells: {\n        title: \"\",\n        customermanagername: \"\",\n        customermanagerZGJN: \"\",\n        customermanagerSPJN: \"\",\n        installermanagername: \"\",\n        installermanagerZGJN: \"\",\n        installermanagerSPJN: \"\"\n      }\n    };\n  },\n  created() {\n    this.getgridcellsbycode();\n    this.getmanager();\n  },\n\n  methods: {\n    // //   测试按钮\n    // test() {\n    //   for (var i = 1; i < 2; i++) {\n    //     // console.log(i);\n    //   }\n    // },\n    //   获取网格单元信息\n    async getgridcellsbycode() {\n      const token = window.sessionStorage.getItem(\"token\");\n      const { data: res } = await this.$http.get(\n        \"/getgridcellsbycode/\" + token\n      );\n      this.gridCellsData = [];\n      this.total = res.length;\n      let i = (this.currentPage - 1) * this.pageSize;\n      let j = this.currentPage * this.pageSize;\n      //   console.log(i);\n      //   console.log(this.total <= this.pageSize);\n      //   console.log(j);\n\n      if (this.total <= this.pageSize) {\n        for (i; i < this.total; i++) {\n          this.gridCellsData.push(res[i]);\n          console.log(this.gridCellsData);\n        }\n      } else {\n        for (i; i < j; i++) {\n          this.gridCellsData.push(res[i]);\n        }\n      }\n\n      //   console.log(this.gridCellsData);\n    },\n\n    // 根据id查询单元信息\n    async getgridcellsbyid(id) {\n      const { data: res } = await this.$http.get(\"/getgridcellsbyid/\" + id);\n      //   console.log(res);\n      this.GridCells.title = res.gridcellname;\n      this.GridCells.customermanagername = res.customermanagername;\n      this.GridCells.customermanagerZGJN = res.customermanagerZGJN;\n      this.GridCells.customermanagerSPJN = res.customermanagerSPJN;\n      this.GridCells.installermanagername = res.installermanagername;\n      this.GridCells.installermanagerZGJN = res.installermanagerZGJN;\n      this.GridCells.installermanagerSPJN = res.installermanagerSPJN;\n      this.cmInfo.name = this.GridCells.customermanagername;\n      this.cmInfo.zgjobnumber = this.GridCells.customermanagerZGJN;\n      this.cmInfo.spjobnumber = this.GridCells.customermanagerSPJN;\n      this.imInfo.name = this.GridCells.installermanagername;\n      this.imInfo.zgjobnumber = this.GridCells.installermanagerZGJN;\n      this.imInfo.spjobnumber = this.GridCells.installermanagerSPJN;\n      this.editDialog = true;\n    },\n\n    // 根据网格单元名称获取符合条件的网格单元信息\n    async getgridcellsbyword(word) {\n      this.queryInfo.query = word;\n      this.queryInfo.code = window.sessionStorage.getItem(\"token\");\n      //   console.log(code);\n      const { data: res } = await this.$http.get(\"/getgridcellsbyword/\", {\n        params: this.queryInfo\n      });\n      //   console.log(res);\n      this.currentPage = 1;\n      this.gridCellsData = [];\n      this.total = res.length;\n      let i = (this.currentPage - 1) * this.pageSize;\n      let j = this.currentPage * this.pageSize;\n      //   console.log(i);\n      //   console.log(this.total <= this.pageSize);\n      //   console.log(j);\n\n      if (this.total <= this.pageSize) {\n        for (i; i < this.total; i++) {\n          this.gridCellsData.push(res[i]);\n          console.log(this.gridCellsData);\n        }\n      } else {\n        for (i; i < j; i++) {\n          this.gridCellsData.push(res[i]);\n        }\n      }\n    },\n\n    // 获取页面大小\n    handleSizeChange(val) {\n      //   console.log(`每页 ${val} 条`);\n      this.pageSize = val;\n      if (this.queryInfo.query) {\n        this.getgridcellsbyword(this.queryInfo.query);\n      } else {\n        this.getgridcellsbycode();\n      }\n    },\n    // 获取当前页码\n    handleCurrentChange(val) {\n      //   console.log(`当前页: ${val}`);\n      this.currentPage = val;\n      if (this.queryInfo.query) {\n        console.log(\"1\");\n\n        this.getgridcellsbyword(this.queryInfo.query);\n      } else {\n        this.getgridcellsbycode();\n      }\n    },\n\n    // 编辑对话框-建议功能\n    querySearch(queryString, cb) {\n      var cmnames = this.cmnames;\n      var results = queryString\n        ? cmnames.filter(this.createFilter(queryString))\n        : cmnames;\n      // 调用 callback 返回建议列表的数据\n      cb(results);\n    },\n    createFilter(queryString) {\n      return cmname => {\n        return (\n          cmname.value.toLowerCase().indexOf(queryString.toLowerCase()) === 0\n        );\n      };\n    },\n    handleSelect(item) {\n      console.log(item);\n    },\n    // 获取所有经理信息\n    async getmanager() {\n      const { data: res } = await this.$http.get(\"getmanager\");\n      for (let item of res) {\n        //   修改name的属性名为value\n        this.managerInfo.push({\n          id: item.id,\n          value: item.name\n        });\n      }\n      //   console.log(this.cmnames);\n    },\n\n    // 关闭对话框提示\n    handleClose(done) {\n      this.$confirm(\"确认关闭？\")\n        .then(_ => {\n          this.editDialog = false;\n        })\n        .catch(_ => {});\n    },\n\n    // 根据用户选择的姓名，匹配该姓名名下的工号\n    async matchingcminfo(name) {\n      const { data: res } = await this.$http.get(\"/getcminfo/\" + name);\n      this.cmInfo = res[0];\n      //   console.log(this.cmInfo);\n    },\n    // 根据用户选择的姓名，匹配该姓名名下的工号\n    async matchingiminfo(name) {\n      //   console.log(id);\n      const { data: res } = await this.$http.get(\"/getiminfo/\" + name);\n      this.imInfo = res[0];\n      //   console.log(this.cmInfo);\n    },\n    //   保存数据\n    async savedata() {\n      if (this.cmInfo.name == null) {\n        this.GridCells.customermanagername = \"\";\n        this.GridCells.customermanagerZGJN = \"\";\n        this.GridCells.customermanagerSPJN = \"\";\n      } else {\n        this.GridCells.customermanagername = this.cmInfo.name;\n        this.GridCells.customermanagerZGJN = this.cmInfo.zgjobnumber;\n        this.GridCells.customermanagerSPJN = this.cmInfo.spjobnumber;\n      }\n      if (this.imInfo.name == null) {\n        this.GridCells.installermanagername = \"\";\n        this.GridCells.installermanagerZGJN = \"\";\n        this.GridCells.installermanagerSPJN = \"\";\n      } else {\n        this.GridCells.installermanagername = this.imInfo.name;\n        this.GridCells.installermanagerZGJN = this.imInfo.zgjobnumber;\n        this.GridCells.installermanagerSPJN = this.imInfo.spjobnumber;\n      }\n      //   console.log(this.GridCells);\n      const { data: res } = await this.$http.get(\"/savedata/\", {\n        params: this.GridCells\n      });\n      //   console.log(res);\n      this.editDialog = false;\n      this.getgridcellsbycode();\n      this.$message.success(\"保存成功\");\n      //   this.getgridcellsbycode();\n      //   console.log(this.GridCells);\n    }\n  },\n  mounted() {}\n};\n</script>\n\n<style lang=\"less\">\n.searchBtn {\n  padding: 21px 0px;\n}\n\n.el-menu-item-group__title {\n  padding: 0 !important;\n}\n\n// 对话框样式\n.el-dialog {\n  border-radius: 6px !important;\n}\n\n.el-dialog__header {\n  margin-top: 30px;\n  background-color: #409eff;\n  border-radius: 6px 6px 0px 0px;\n}\n\n.el-dialog__title {\n  color: #fff !important;\n}\n\n.el-dialog__body {\n  padding: 15px !important;\n}\n\n.Manager {\n  font-size: 24px;\n  margin: 12px 0px;\n  cursor: default;\n}\n\n.managerSelect {\n  width: 100% !important;\n}\n</style>"]}]}